<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General Variables

flipped_1 = -1;
flipped_2 = -1;
temp_card = -1;
cards_left = 2 * 5;

//Holds all of the cards
cards = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creates The Cards

//Highest card value
max_val = cards_left / 2;
repeats = 0;
if(max_val &gt; 10){
    repeats = max_val - 10;
    max_val = 10;
}

card_vals = 0;
for(e = 1; e &lt;= max_val; e ++){
    card_vals[e] = 2;
    
}
while(repeats &gt; 0){
    for(e = 1; e &lt;= max_val; e ++){
        card_vals[e] += 2; 
    }
}
//irandom(x) goes 0-x inclusive
//irandom_range(x,y) goes x-y inclusive

card_index = -1;

for(y_pos = 96; y_pos &lt;= 96 + 64 * (cards_left / 10); y_pos += 64){
    for(x_pos = 32; x_pos &lt;= 32 + 64 * 9; x_pos += 64){
        card_index ++;
        if(card_index &gt;= cards_left){
            break;
        }
        cards[card_index] = instance_create(x_pos, y_pos, obj_card);
        cards[card_index].card_pos = card_index;
        while(true){
            temp_val = irandom_range(1,max_val);
            if(card_vals[temp_val] &gt; 0){
                card_vals[temp_val] --;
                cards[card_index].value = temp_val;
                break;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Testing cards

if(flipped_1 == -1){
    flipped_1 = temp_card;
}
else if(flipped_2 == -1){
    flipped_2 = temp_card;
    if(cards[flipped_1].value == cards[flipped_2].value){
        with(cards[flipped_1]){
            instance_destroy();
        }
        with(cards[flipped_2]){
            instance_destroy();
        }
        cards_left -= 2;
        flipped_1 = -1;
        flipped_2 = -1;
        
        /*if(cards == 0){
            //Win
        }*/
    }
    else{
        cards[flipped_1].flipped = false;
        cards[flipped_1].image_index = 0;
        cards[flipped_2].flipped = false;
        cards[flipped_2].image_index = 0;
        flipped_1 = -1;
        flipped_2 = -1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
